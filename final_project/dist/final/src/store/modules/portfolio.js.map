{"version":3,"sources":["../../../../../final/src/store/modules/portfolio.js"],"names":["state","funds","stocks","mutations","stockId","quantity","stockPrice","record","find","element","id","push","splice","indexOf","actions","sellStock","order","commit","getters","stockPortfolio","map","stock","name","price"],"mappings":";;;;;AAAA,IAAMA,QAAQ;AACZC,SAAO,KADK;AAEZC,UAAQ;;AAIV;AANc,CAAd,CAOA,IAAMC,YAAY;AAChB,aADgB,qBACHH,KADG,QACqC;AAAA,QAAhCI,OAAgC,QAAhCA,OAAgC;AAAA,QAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,QAAbC,UAAa,QAAbA,UAAa;;AACnD,QAAMC,SAASP,MAAME,MAAN,CAAaM,IAAb,CAAkB;AAAA,aAAWC,QAAQC,EAAR,KAAeN,OAA1B;AAAA,KAAlB,CAAf;AACA,QAAIG,MAAJ,EAAY;AACVA,aAAOF,QAAP,IAAmBA,QAAnB;AACD,KAFD,MAEO;AACLL,YAAME,MAAN,CAAaS,IAAb,CAAkB;AAChBD,YAAIN,OADY;AAEhBC,kBAAUA;AAFM,OAAlB;AAID;AACDL,UAAMC,KAAN,IAAeK,aAAaD,QAA5B;AACD,GAZe;AAahB,cAbgB,sBAaFL,KAbE,SAasC;AAAA,QAAhCI,OAAgC,SAAhCA,OAAgC;AAAA,QAAvBC,QAAuB,SAAvBA,QAAuB;AAAA,QAAbC,UAAa,SAAbA,UAAa;;AACpD,QAAMC,SAASP,MAAME,MAAN,CAAaM,IAAb,CAAkB;AAAA,aAAWC,QAAQC,EAAR,KAAeN,OAA1B;AAAA,KAAlB,CAAf;AACA,QAAIG,OAAOF,QAAP,GAAkBA,QAAtB,EAAgC;AAC9BE,aAAOF,QAAP,IAAmBA,QAAnB;AACD,KAFD,MAEO;AACLL,YAAME,MAAN,CAAaU,MAAb,CAAoBZ,MAAME,MAAN,CAAaW,OAAb,CAAqBN,MAArB,CAApB,EAAkD,CAAlD;AACD;AACDP,UAAMC,KAAN,IAAeK,aAAaD,QAA5B;AACD;AArBe,CAAlB;;AAwBA;AACA,IAAMS,UAAU;AACdC,aAAW,0BAAWC,KAAX,EAAqB;AAAA,QAAnBC,MAAmB,SAAnBA,MAAmB;;AAC9BA,WAAO,YAAP,EAAqBD,KAArB;AACD;AAHa,CAAhB;;AAMA,IAAME,UAAU;AACdC,gBADc,0BACEnB,KADF,EACSkB,OADT,EACkB;AAC9B,WAAOlB,MAAME,MAAN,CAAakB,GAAb,CAAiB,iBAAS;AAC/B,UAAMb,SAASW,QAAQhB,MAAR,CAAeM,IAAf,CAAoB;AAAA,eAAWC,QAAQC,EAAR,KAAeW,MAAMX,EAAhC;AAAA,OAApB,CAAf;AACA,aAAO;AACLA,YAAIW,MAAMX,EADL;AAELL,kBAAUgB,MAAMhB,QAFX;AAGLiB,cAAMf,OAAOe,IAHR;AAILC,eAAOhB,OAAOgB;AAJT,OAAP;AAMD,KARM,CAAP;AASD,GAXa;AAadtB,OAbc,iBAaPD,KAbO,EAaA;AACZ,WAAOA,MAAMC,KAAb;AACD;AAfa,CAAhB;;kBAkBe;AACbD,cADa;AAEbkB,kBAFa;AAGbf,sBAHa;AAIbW;AAJa,C","file":"portfolio.js","sourcesContent":["const state = {\n  funds: 10000,\n  stocks: []\n\n}\n\n// Can't Async\nconst mutations = {\n  'BUY_STOCK' (state, {stockId, quantity, stockPrice}) {\n    const record = state.stocks.find(element => element.id === stockId)\n    if (record) {\n      record.quantity += quantity\n    } else {\n      state.stocks.push({\n        id: stockId,\n        quantity: quantity\n      })\n    }\n    state.funds -= stockPrice * quantity\n  },\n  'SELL_STOCK' (state, {stockId, quantity, stockPrice}) {\n    const record = state.stocks.find(element => element.id === stockId)\n    if (record.quantity > quantity) {\n      record.quantity -= quantity\n    } else {\n      state.stocks.splice(state.stocks.indexOf(record), 1)\n    }\n    state.funds += stockPrice * quantity\n  }\n}\n\n// Can Async\nconst actions = {\n  sellStock: ({commit}, order) => {\n    commit('SELL_STOCK', order)\n  }\n}\n\nconst getters = {\n  stockPortfolio (state, getters) {\n    return state.stocks.map(stock => {\n      const record = getters.stocks.find(element => element.id === stock.id)\n      return {\n        id: stock.id,\n        quantity: stock.quantity,\n        name: record.name,\n        price: record.price\n      }\n    })\n  },\n\n  funds (state) {\n    return state.funds\n  }\n}\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n}\n"]}